name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        pip install mypy
        mypy --ignore-missing-imports backend/tradingbot/ ml/tradingbots/
    
    - name: Test with pytest
      run: |
        pytest backend/tradingbot/test_*.py ml/tradingbots/components/test_*.py -v --cov=backend/tradingbot --cov=ml/tradingbots --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-mock
    
    - name: Test script imports
      run: |
        python -c "import wsb_dip_bot; print('wsb_dip_bot imported successfully')"
        python -c "import momentum_weeklies; print('momentum_weeklies imported successfully')"
        python -c "import debit_spreads; print('debit_spreads imported successfully')"
        python -c "import leaps_tracker; print('leaps_tracker imported successfully')"
        python -c "import lotto_scanner; print('lotto_scanner imported successfully')"
        python -c "import wheel_strategy; print('wheel_strategy imported successfully')"
    
    - name: Test help commands
      run: |
        python wsb_dip_bot.py --help
        python momentum_weeklies.py --help
        python debit_spreads.py --help
        python leaps_tracker.py --help
        python lotto_scanner.py --help
        python wheel_strategy.py --help

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety
    
    - name: Run bandit security scan
      run: |
        bandit -r backend/tradingbot/ ml/tradingbots/ -f json -o bandit-report.json || true
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
